---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: fixedge-java-with-h2-bundle
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fixedge-java-with-h2-bundle
  serviceName: "fixedge-java-with-h2-bundle"
  template:
    metadata:
      labels:
        app: fixedge-java-with-h2-bundle
        service: fixedge-java-with-h2-bundle
    spec:
      volumes:
      - name: cache-volume-fixedge
        emptyDir: {}
      - name: cache-volume-fixicc
        emptyDir: {}
      - name: cache-volume-fixeye
        emptyDir: {}
      # FIXEdge Java volumes
      - name: fixedge-java-configs-data
        persistentVolumeClaim:
          claimName: fixedge-java-configs-pvc
      - name: fixedge-java-session-logs-data
        persistentVolumeClaim:
          claimName: fixedge-java-session-logs-pvc
      - name: fixedge-java-app-logs-data
        persistentVolumeClaim:
          claimName: fixedge-java-app-logs-pvc
      - name: fixaj2-license-file
        secret:
          secretName: fixaj2-java-license-file
      - name: fixedge-java-license-file
        secret:
          secretName: fixedge-java-license-file
      # FIXICC volumes
      - name: fixicc-configs-data
        persistentVolumeClaim:
          claimName: fixicc-configs-pvc
      - name: fixicc-logs-data
        persistentVolumeClaim:
          claimName: fixicc-logs-pvc
      # FixEye volumes
      - name: fixeye-configs-data
        persistentVolumeClaim:
          claimName: fixeye-configs-pvc
      - name: fixeye-samples-data
        persistentVolumeClaim:
          claimName: fixeye-samples-pvc
      - name: fixeye-logs-data
        persistentVolumeClaim:
          claimName: fixeye-logs-pvc
      - name: fixeye-license-file
        secret:
          secretName: fixeye-license-file
      - name: ssh-creds-files
        secret:
          secretName: ssh-creds
          optional: true
          defaultMode: 256
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      # FIXEdge Java container
      - name: fixedge-java
        image: {{ .Values.fixedge_java.image.url }}:{{ .Values.fixedge_java.image.version }}
        resources:
{{ toYaml .Values.fixedge_java.resources | indent 10 }}
        imagePullPolicy: {{ .Values.fixedge_java.image.imagePullPolicy }}
        ports:
        - containerPort: {{ .Values.fixedge_java.port }}
          protocol: TCP
        - containerPort: {{ .Values.fixedge_java.httpAdmPort }}
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /service/started
            port: {{ .Values.fixedge_java.httpAdmPort }}
            scheme: HTTPS
          initialDelaySeconds: {{ .Values.fixedge_java.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.fixedge_java.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.fixedge_java.livenessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.fixedge_java.livenessProbe.failureThreshold }}
        readinessProbe:
          httpGet:
            path: /service/started
            port: {{ .Values.fixedge_java.httpAdmPort }}
            scheme: HTTPS
          initialDelaySeconds: {{ .Values.fixedge_java.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.fixedge_java.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.fixedge_java.readinessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.fixedge_java.readinessProbe.failureThreshold }}
        volumeMounts:
        - name: fixaj2-license-file
          mountPath: /etc/fixedge-java/fixaj2-license.bin
          subPath: fixaj2-license.bin
        - name: fixedge-java-license-file
          mountPath: /etc/fixedge-java/fixedgej-license.bin
          subPath: fixedgej-license.bin
        - name: fixedge-java-configs-data
          mountPath: /etc/fixedge-java
        - name: fixedge-java-session-logs-data
          mountPath: /var/data/fixedge-java
        - name: fixedge-java-app-logs-data
          mountPath: /var/log/fixedge-java
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
      
      # FIXICC H2 container
      - name: fixicc
        image: {{ .Values.fixicc.image.url }}:{{ .Values.fixicc.image.version }}
        resources:
{{ toYaml .Values.fixicc.resources | indent 10 }}
        imagePullPolicy: {{ .Values.fixicc.image.imagePullPolicy }}
        ports:
        - containerPort: {{ .Values.fixicc.port }}
          protocol: TCP
        env:
        - name: JAVA_OPTS
          value: "-Xmx1536m -Xms512m -Djava.security.egd=file:/dev/./urandom"
        - name: TZ
          value: "UTC"
        livenessProbe:
          httpGet:
            path: /app
            port: {{ .Values.fixicc.port }}
          initialDelaySeconds: {{ .Values.fixicc.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.fixicc.livenessProbe.periodSeconds }}
        readinessProbe:
          httpGet:
            path: /app
            port: {{ .Values.fixicc.port }}
          initialDelaySeconds: {{ .Values.fixicc.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.fixicc.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.fixicc.readinessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.fixicc.readinessProbe.failureThreshold }}
        volumeMounts:
        - name: fixicc-configs-data
          mountPath: /etc/fixicc-h2
        - name: fixicc-logs-data
          mountPath: /var/log/fixicc-h2
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
      
      # FixEye Agent container
      - name: fixeye
        image: {{ .Values.fixeye.image.url }}:{{ .Values.fixeye.image.version }}
        resources:
{{ toYaml .Values.fixeye.resources | indent 10 }}
        imagePullPolicy: {{ .Values.fixeye.image.imagePullPolicy }}
        ports:
        - containerPort: {{ .Values.fixeye.port }}
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: {{ .Values.fixeye.port }}
          initialDelaySeconds: {{ .Values.fixeye.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.fixeye.livenessProbe.periodSeconds }}
        readinessProbe:
          tcpSocket:
            port: {{ .Values.fixeye.port }}
          initialDelaySeconds: {{ .Values.fixeye.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.fixeye.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.fixeye.readinessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.fixeye.readinessProbe.failureThreshold }}
        volumeMounts:
        - name: fixeye-license-file
          mountPath: /etc/fixeye/fixeye-agent.license
          subPath: fixeye-agent.license
        - name: fixeye-configs-data
          mountPath: /etc/fixeye
        - name: fixeye-samples-data
          mountPath: /usr/share/doc/fixeye/samples
        - name: fixeye-logs-data
          mountPath: /var/log/fixeye
        - name: fixedge-java-session-logs-data
          mountPath: /usr/share/doc/fixeye/samples/fixedge-data
          readOnly: true
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
      
      # Clean archive container (for FIXEdge Java)
      - name: clean-archive
        image: busybox:1.28
        resources:
          requests:
            cpu: 0.2
            memory: 100Mi
          limits:
            cpu: 0.2
            memory: 100Mi
        command: ['sh', '-c', 'while true; do find /var/data/fixedge-java/archive -name "*.log" -mtime +7 -delete 2>/dev/null || true; sleep 24h; done']
        volumeMounts: 
        - name: fixedge-java-session-logs-data
          mountPath: /var/data/fixedge-java
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
      
      initContainers:
        # Git cloner for FIXEdge Java configs
        - name: git-cloner-fixedge
          image: alpine/git
          resources:
            requests:
              cpu: 0.2
              memory: 100Mi
            limits:
              cpu: 0.2
              memory: 100Mi
          args:
              - clone
              - --single-branch
              - --branch
              - {{ .Values.git_configs.branch }}
              - --
              - {{ .Values.git_configs.url }}
              - /mnt/fe-configs/data
          volumeMounts: 
            - name: "ssh-creds-files"
              mountPath: "/root/.ssh"
            - name: cache-volume-fixedge
              mountPath: "/mnt/fe-configs"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
        
        # Git cloner for FIXICC configs
        - name: git-cloner-fixicc
          image: alpine/git
          resources:
            requests:
              cpu: 0.2
              memory: 100Mi
            limits:
              cpu: 0.2
              memory: 100Mi
          args:
              - clone
              - --single-branch
              - --branch
              - {{ .Values.git_configs.branch }}
              - --
              - {{ .Values.git_configs.url }}
              - /mnt/fixicc-configs/data
          volumeMounts: 
            - name: "ssh-creds-files"
              mountPath: "/root/.ssh"
            - name: cache-volume-fixicc
              mountPath: "/mnt/fixicc-configs"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
        
        # Git cloner for FixEye configs
        - name: git-cloner-fixeye
          image: alpine/git
          resources:
            requests:
              cpu: 0.2
              memory: 100Mi
            limits:
              cpu: 0.2
              memory: 100Mi
          args:
              - clone
              - --single-branch
              - --branch
              - {{ .Values.git_configs.branch }}
              - --
              - {{ .Values.git_configs.url }}
              - /mnt/fixeye-configs/data
          volumeMounts: 
            - name: "ssh-creds-files"
              mountPath: "/root/.ssh"
            - name: cache-volume-fixeye
              mountPath: "/mnt/fixeye-configs"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
        
        # Copy configs for FIXEdge Java
        - name: copy-configs-fixedge
          image: busybox:1.28
          resources:
            requests:
              cpu: 0.2
              memory: 100Mi
            limits:
              cpu: 0.2
              memory: 100Mi
          env:          
            - name: "force_init_configs"
              value: {{ .Values.force_init_configs | squote }}
          command: ['sh', '-c', '[[ "${force_init_configs}" == "true" || ! -f "/etc/fixedge-java/fixedge.properties" ]] && cp -R /mnt/fe-configs/data/fixedge-java-with-h2-bundle/fixedge-java/* /etc/fixedge-java && echo "Copy FIXEdge Java configs - done." || echo "/etc/fixedge-java/fixedge.properties already exists, skip copying..."']
          volumeMounts: 
            - name: cache-volume-fixedge
              mountPath: "/mnt/fe-configs"
            - name: fixedge-java-configs-data
              mountPath: /etc/fixedge-java
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
        
        # Copy configs for FIXICC
        - name: copy-configs-fixicc
          image: busybox:1.28
          resources:
            requests:
              cpu: 0.2
              memory: 100Mi
            limits:
              cpu: 0.2
              memory: 100Mi
          env:          
            - name: "force_init_configs"
              value: {{ .Values.force_init_configs | squote }}
          command: ['sh', '-c', '[[ "${force_init_configs}" == "true" || ! -f "/etc/fixicc-h2/local.app.properties" ]] && cp -R /mnt/fixicc-configs/data/fixedge-java-with-h2-bundle/fixicc-h2/* /etc/fixicc-h2 && echo "Copy FIXICC configs - done." || echo "/etc/fixicc-h2/local.app.properties already exists, skip copying..."']
          volumeMounts: 
            - name: cache-volume-fixicc
              mountPath: "/mnt/fixicc-configs"
            - name: fixicc-configs-data
              mountPath: /etc/fixicc-h2
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
        
        # Copy configs for FixEye
        - name: copy-configs-fixeye
          image: busybox:1.28
          resources:
            requests:
              cpu: 0.2
              memory: 100Mi
            limits:
              cpu: 0.2
              memory: 100Mi
          env:          
            - name: "force_init_configs"
              value: {{ .Values.force_init_configs | squote }}
          command: ['sh', '-c', '[[ "${force_init_configs}" == "true" || ! -f "/etc/fixeye/fixeye-agent.properties" ]] && cp -R /mnt/fixeye-configs/data/fixedge-java-with-h2-bundle/fixeye-agent/* /etc/fixeye && echo "Copy FixEye configs - done." || echo "/etc/fixeye/fixeye-agent.properties already exists, skip copying..."']
          volumeMounts: 
            - name: cache-volume-fixeye
              mountPath: "/mnt/fixeye-configs"
            - name: fixeye-configs-data
              mountPath: /etc/fixeye
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
        
        # Initialize directories
        - name: dirs-init
          image: busybox:1.28
          resources:
            requests:
              cpu: 0.2
              memory: 100Mi
            limits:
              cpu: 0.2
              memory: 100Mi
          command: ['sh', '-c', 'mkdir -p /var/data/fixedge-java/archive /var/log/fixicc-h2 /usr/share/doc/fixeye/samples /var/log/fixeye']
          volumeMounts: 
            - name: fixedge-java-session-logs-data
              mountPath: /var/data/fixedge-java
            - name: fixicc-logs-data
              mountPath: /var/log/fixicc-h2
            - name: fixeye-samples-data
              mountPath: /usr/share/doc/fixeye/samples
            - name: fixeye-logs-data
              mountPath: /var/log/fixeye
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
